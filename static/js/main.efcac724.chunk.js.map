{"version":3,"sources":["editable-stuff/arnav_CV.pdf","editable-stuff/youngun.JPG","components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/ProjectCard.jsx","components/home/Project.jsx","components/size.jsx","components/home/Freelance.jsx","components/Footer.jsx","components/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainBody","useState","Array","icons","length","fill","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","id","className","FirstName","MiddleName","LastName","devDesc","map","key","target","rel","href","url","aria-label","image","split","onMouseOver","onMouseOut","role","AboutMe","Pdf","resumeURL","currentlink","link","aboutHeading","Language","value","setData","handleRequest","useCallback","e","axios","get","then","response","catch","error","console","message","finally","useEffect","array","total_count","index","push","language","Math","trunc","ProjectCard","updated_at","setUpdatedAt","handleUpdatetime","date","Date","pushed_at","diff","getTime","hours","toString","day","getDate","monthIndex","getMonth","year","getFullYear","name","description","svn_url","stargazers_count","languages_url","Project","projectsArray","setProjectsArray","gitHubLink","gitHubUsername","gitHubQuerry","slice","projectsLength","projectHeading","project","getWindowDimensions","window","width","innerWidth","height","innerHeight","Freelance","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","divStyle","style","backgroundColor","Row","Col","xs","Image","src","Service","alt","fluid","md","Footer","bgStyle","Navbar","props","isTop","setIsTop","document","istop","scrollY","type","data-toggle","data-target","aria-controls","aria-expanded","Home","App","basename","showNavigationbar","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efcac724.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arnav_CV.3828d22b.pdf\";","module.exports = __webpack_public_path__ + \"static/media/youngun.d11e0b83.JPG\";","import React, { useState } from \"react\";\nimport Typist from \"react-typist\";\nimport {\n  FirstName,\n  LastName,\n  MiddleName,\n  devDesc,\n  icons,\n} from \"../../editable-stuff/configurations.json\";\n\nconst MainBody = () => {\n  // const [backgroundType, setBackgroundType] = useState(Configs.backgroundType);\n  const [hoverstatus, setHoverstatus] = useState(\n    new Array(icons.length).fill(\"socialicons\")\n  );\n\n  const toggleHover = (data) => {\n    const newhoverStatus = [...hoverstatus];\n\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      return setHoverstatus(newhoverStatus);\n    } else if (data.event === \"leave\") {\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      return setHoverstatus(newhoverStatus);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        id=\"home\"\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <div className=\"container container-fluid text-center \">\n          <h1 className=\"display-1 bold\">\n            {FirstName + \" \" + MiddleName + \" \" + LastName}\n          </h1>\n          <h2 >\n          I build things for the web and create simple solutions for complex problems.\n          </h2>\n          <Typist className=\"lead\"> {devDesc}</Typist>\n          <div className=\"p-5\">\n            {icons.map((icon) => (\n              <a\n                key={icon.id}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={icon.url}\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\n              >\n                <i\n                  className={`fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`}\n                  onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\n                  onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\n                />\n              </a>\n            ))}\n          </div>\n          <a\n            className=\"btn btn-outline-light btn-lg\"\n            href=\"#aboutme\"\n            role=\"button\"\n            aria-label=\"Learn more about me\"\n          >\n            More about me\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainBody;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Pdf from \"../../editable-stuff/arnav_CV.pdf\";\nimport {\n  aboutHeading,\n  aboutDescription,\n  showInstaProfilePic,\n} from \"../../editable-stuff/configurations.json\";\n\nconst AboutMe = () => {\n  const [resumeURL] = useState(Pdf);\n  var currentlink = <a target=\"_blank\" href='https://www.newsg8r.com/'>Newsg8r</a>;\n  var link = <a target=\"_blank\" href='https://www.youngun.in/'>Youngun's</a>;\n  return (\n    <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\n      <div className=\"container container-fluid p-5\">\n        <div className=\"row\">\n          <div className={`col-lg-12`}>\n            <h1 className=\"display-4 mb-5 text-center\">{aboutHeading}</h1>\n            <p className=\"lead text-center\">I'm a Mumbai based software engineer who specializes in building digital experiences on web and mobile devices. \n            My interest in web development started back in 2017 when I decided to build a OLX like website using Django for my college to buy stuff from the seniors graduating. \n            It taught me a lot about HTML & CSS!\n            <br/>\n            <br/>\n            Fast-forward to today, and I've had the privilege of working at an advertising agency and 2 start-ups.\n            I currently work as a Full stack and Dev-ops engineer for <b>{currentlink}</b> and also handle their app development. \n            <br/>\n            <b>My greatest achievement</b> was to reduce <b>{link}</b> operations time and work by 70% using simple CMS solutions built on Flask and Nodejs.\n            </p>\n            {resumeURL && (\n              <p className=\"lead text-center\">\n                <a\n                  className=\"btn btn-outline-dark btn-lg\"\n                  href={Pdf}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  role=\"button\"\n                  aria-label=\"Resume/CV\"\n                >\n                  Resume\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({ value }) => {\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\n\n  const handleUpdatetime = useCallback(\n    (e) => {\n      const date = new Date(value.pushed_at);\n      const nowdate = new Date();\n      const diff = nowdate.getTime() - date.getTime();\n      const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n      if (hours < 24) {\n        return setUpdatedAt(`${hours.toString()} hours ago`);\n      } else {\n        const monthNames = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ];\n        const day = date.getDate();\n        const monthIndex = date.getMonth();\n        const year = date.getFullYear();\n\n        return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\n      }\n    },\n    [value.pushed_at]\n  );\n\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n\n  const { name, description, svn_url, stargazers_count, languages_url } = value;\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{name} </h5>\n          <p className=\"card-text\">{description} </p>\n          <a\n            href={`${svn_url}/archive/master.zip`}\n            className=\"btn btn-outline-secondary mr-3\"\n          >\n            <i className=\"fab fa-github\" /> Clone Project\n          </a>\n          <a\n            href={svn_url}\n            target=\" _blank\"\n            className=\"btn btn-outline-secondary\"\n          >\n            <i className=\"fab fa-github\" /> Repo\n          </a>\n          <hr />\n          <Language value={languages_url}></Language>\n          <p className=\"card-text\">\n            <span className=\"text-dark card-link mr-4\">\n              <i className=\"fab fa-github\" /> Stars{\" \"}\n              <span className=\"badge badge-dark\">{stargazers_count}</span>\n            </span>\n            <small className=\"text-muted\">Updated {updated_at}</small>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Language = ({ value }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(\n    (e) => {\n      axios\n        .get(value)\n        .then((response) => {\n          // handle success\n          // console.log(response.data);\n          return setData(response.data);\n        })\n        .catch((error) => {\n          // handle error\n          return console.error(error.message);\n        })\n        .finally(() => {\n          // always executed\n        });\n    },\n    [value]\n  );\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n    // console.log(index, this.state.data[index]);\n  }\n  // console.log(\"array contains \", array, this.state.data[array[0]]);\n\n  return (\n    <div className=\"pb-3\">\n      Languages:{\" \"}\n      {array.map((language) => (\n        <p key={language} className=\"badge badge-light card-link\">\n          {language}: {Math.trunc((data[language] / total_count) * 1000) / 10} %\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport ProjectCard from \"./ProjectCard\";\nimport {\n  projectHeading,\n  gitHubLink,\n  gitHubUsername,\n  gitHubQuerry,\n  projectsLength,\n} from \"../../editable-stuff/configurations.json\";\n\nconst Project = () => {\n  const [projectsArray, setProjectsArray] = useState([]);\n\n  const handleRequest = useCallback((e) => {\n    axios\n      .get(gitHubLink + gitHubUsername + gitHubQuerry)\n      .then((response) => {\n        // handle success\n        // console.log(response.data.slice(0, 4));\n        return setProjectsArray(response.data.slice(0, projectsLength));\n      })\n      .catch((error) => {\n        // handle error\n        return console.error(error.message);\n      })\n      .finally(() => {\n        // always executed\n      });\n  }, []);\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  return (\n    <div id=\"projects\" className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\n      {projectsArray.length && (\n        <div className=\"container container-fluid p-5\">\n          <h1 className=\"display-4 pb-5\">{projectHeading}</h1>\n          <div className=\"row\">\n            {projectsArray.map((project) => (\n              <ProjectCard key={project.id} id={project.id} value={project} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Project;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React from \"react\";\nimport Service from \"../../editable-stuff/youngun.JPG\";\nimport useWindowDimensions from \"../size\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport \"../../slider.css\";\nimport { Row, Col, Image } from \"react-bootstrap\";\n// import Culture from \"../../editable-stuff/culture.jpg\"\n\nconst Freelance = () => {\n  const { height, width } = useWindowDimensions();\n  const divStyle = {\n    width: width * 0.9,\n    height: \"450\",\n  };\n  return (\n    <div\n      id=\"freelance\"\n      className=\"jumbotron jumbotron-fluid m-0 \"\n      style={{ backgroundColor: \"white\" ,height:height }}\n    >\n      <div className=\"container container-fluid align-self-center \">\n        <div className=\"row \">\n          <div className=\"col d-lg-inline align-self-center\">\n            <h1 className=\"display-4 mb-3 text-center\">Freelance Feedbacks</h1>\n            <br />\n            <div style={divStyle} className=\"col d-lg-inline align-self-center\">\n              <AwesomeSlider className=\"aws-btn \">\n                <div>\n                  <Row>\n                    <Col xs className=\"lead\">\n                      <b>Arnav</b> showed great responsibility and dedication towards\n                      his work and was the one who started the end to end tech\n                      automation planning and execution for our Ad agency, Ad\n                      agenicies that are well know for their messed up\n                      operations.He managed to streamline the process for us\n                      by understanding all the potential gaps.Few qualities that we loved about him :\n                      <ul>\n                          <li>smart approach towards the tech solutions that he\n                      plan/executes.</li>\n                          <li>always on toes when it comes to fixing bugs and\n                      understands the urgency of work.</li>\n                          <li>takes full responsibility about his work.</li>\n                    </ul>\n                    </Col>\n                    <Col xs  className=\"m-auto\">\n                    <a href=\"https://youngun.in\" target=\"_blank\">\n                      <Image\n                        className=\"d-block mx-auto \"\n                        src={Service}\n                        alt=\"SEC\"\n                        fluid\n                      \n                      />{\" \"}\n                      </a>\n                      <Row  className=\"lead d-block mx-auto\">\n                      <b className=\"h3\">-Saksham Jadon</b><br/>\n                      &nbsp;&nbsp;Founder <a href=\"https://youngun.in\" target=\"_blank\">Youngun</a>\n\n                      </Row>\n                    </Col>\n                  </Row>\n                </div>\n                <div>\n                  <Row className=\"justify-content-md-center\">\n                    <Col xs className=\"lead\" md={7}>\n                      <b>Arnav</b> is a highly skilled full stack developer and has deep knowledge about latest technology. \n                      Arnav is a really great person to work with. Looking forward to working with him again.\n                      <br/>\n                      <br/>\n                      <b className=\"h3\">-Gaggan Talreja</b><br/>\n                      &nbsp;&nbsp;Co-worker <a href=\"https://memeunion.in\" target=\"_blank\">Memeunion</a>\n                    </Col>\n                  </Row>\n                </div>\n              </AwesomeSlider>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Freelance;\n","import React, { useState } from \"react\";\n\nconst Footer = () => {\n  const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\n\n  return (\n    <footer style={bgStyle} className=\"mt-auto py-3 text-center\">\n      {/* <strong> &copy; 2020 </strong>*/}\n      <i className=\"fas fa-code\"></i> with <i className=\"fas fa-heart\"></i> by{\" \"}\n      <a\n        className=\"badge badge-dark\"\n        rel=\"noopener\"\n        href=\"https://github.com/foxy17\"\n        aria-label=\"My GitHub\"\n      >\n        Arnav Chauhan\n      </a>{\" \"}\n      using <i className=\"fab fa-react\"></i>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Pdf from \"../editable-stuff/arnav_CV.pdf\";\nimport { FirstName } from \"../editable-stuff/configurations.json\";\n\nconst Navbar = (props) => {\n  const [isTop, setIsTop] = useState(true);\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const istop = window.scrollY < 200;\n      if (istop !== isTop) {\n        setIsTop(istop);\n      }\n    });\n  }, [isTop]);\n\n  return (\n    <nav\n      className={`navbar navbar-expand-lg fixed-top navbar-light ${\n        isTop ? \"bg-transparent\" : \"bg-gradient\"\n      } `}\n    >\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\n        {`<${FirstName} />`}\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n        aria-controls=\"navbarTogglerDemo02\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n           <li className=\"nav-item\">\n            <a\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#aboutme\"}\n            >\n              <b>About</b>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#freelance\"}\n            >\n              <b>Freelance</b>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#projects\"}\n            >\n              <b>Projects</b>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link lead\"\n              href={Pdf}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              <b>Resume</b>\n            </a>\n          </li>\n         \n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./App.css\";\nimport {\n  showNavigationbar,\n  showBlog,\n} from \"./editable-stuff/configurations.json\";\nimport MainBody from \"./components/home/MainBody\";\nimport AboutMe from \"./components/home/AboutMe\";\nimport Project from \"./components/home/Project\";\nimport Freelance from \"./components/home/Freelance\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\n\nconst Home = () => {\n  return (\n    <Fragment>\n      <MainBody />\n      <AboutMe />\n      <Freelance />\n      <Project />\n    </Fragment>\n  );\n};\n\nconst App = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n    {showNavigationbar && <Navbar />}\n    <Route path=\"/\" exact component={Home} />\n    <Footer />\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}